{"openapi":"3.0.2","info":{"title":"OpenCopilot API","description":"OpenCopilot API, for more information visit https://docs.opencopilot.dev/","version":"0.1","contact":{"name":"","email":""},"x-logo":{"url":""}},"servers":[{"url":"http://127.0.0.1:3000"}],"paths":{"/v0/conversations":{"get":{"tags":["Conversation"],"summary":"List conversations.","operationId":"handle_get_conversations_v0_conversations_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConversationsResponse"}}}}},"security":[{"APIKeyHeader":[]}]}},"/v0/conversations/{conversation_id}":{"get":{"tags":["Conversation"],"summary":"Retrieve a conversation.","operationId":"handle_get_conversation_history_v0_conversations__conversation_id__get","parameters":[{"description":"The ID of the conversation.","required":true,"schema":{"title":"Conversation Id","type":"string","description":"The ID of the conversation."},"name":"conversation_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChatHistoryResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]},"post":{"tags":["Conversation"],"summary":"Send a message to the copilot and receive a non-streamed response.","operationId":"handle_conversation_v0_conversations__conversation_id__post","parameters":[{"description":"\nThe ID of the conversation. To start a new conversation, you should pass in a random uuid version 4 (Python: `import uuid; uuid.uuid4()`). To continue a conversation, re-use the same uuid.\n","required":true,"schema":{"title":"Conversation Id","type":"string","description":"\nThe ID of the conversation. To start a new conversation, you should pass in a random uuid version 4 (Python: `import uuid; uuid.uuid4()`). To continue a conversation, re-use the same uuid.\n"},"name":"conversation_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"title":"Payload","allOf":[{"$ref":"#/components/schemas/ConversationInput"}],"description":"Input and parameters for the conversation."}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChatResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]},"delete":{"tags":["Conversation"],"summary":"Delete a conversation.","operationId":"handle_delete_conversation_history_v0_conversations__conversation_id__delete","parameters":[{"description":"The ID of the conversation.","required":true,"schema":{"title":"Conversation Id","type":"string","description":"The ID of the conversation."},"name":"conversation_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChatDeleteResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/v0/conversations/{conversation_id}/stream":{"post":{"tags":["Conversation"],"summary":"Send a message to the copilot and stream the response.","operationId":"handle_conversation_streaming_v0_conversations__conversation_id__stream_post","parameters":[{"description":"\nThe ID of the conversation. To start a new conversation, you should pass in a random uuid version 4 (Python: `import uuid; uuid.uuid4()`). To continue a conversation, re-use the same uuid.\n","required":true,"schema":{"title":"Conversation Id","type":"string","description":"\nThe ID of the conversation. To start a new conversation, you should pass in a random uuid version 4 (Python: `import uuid; uuid.uuid4()`). To continue a conversation, re-use the same uuid.\n"},"name":"conversation_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"title":"Payload","allOf":[{"$ref":"#/components/schemas/ConversationInput"}],"description":"Input and parameters for the conversation."}}},"required":true},"responses":{"200":{"description":"\nA stream of objects, delimited by newlines. Each object will be of the following form:\n```\n{\n    \"text\": \"some text\" # the next chunk of the message from the copilot\n    \"error\": \"\"         # if present, a string description of the error that occurred\n}\n```\n\nFor example, the message \"I like to eat apples\" might be streamed as follows:\n\n```\n{\"text\": \"I like\"}\n{\"text\": \" to eat\"}\n{\"text\": \" apples\"}\n```\n","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/v0/debug/{conversation_id}/{message_id}":{"get":{"tags":["Conversation"],"summary":"Get debug information about a message.","operationId":"get_copilots_v0_debug__conversation_id___message_id__get","parameters":[{"description":"The ID of the conversation.","required":true,"schema":{"title":"Conversation Id","type":"string","description":"The ID of the conversation."},"name":"conversation_id","in":"path"},{"description":"The ID of the response message.","required":true,"schema":{"title":"Message Id","type":"string","description":"The ID of the response message."},"name":"message_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetMessageDebugResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/v0/tokens":{"post":{"tags":["Token"],"summary":"Generate a JSON Web Token.","operationId":"evaluate_v0_tokens_post","requestBody":{"content":{"application/json":{"schema":{"title":"Request","allOf":[{"$ref":"#/components/schemas/TokenRequest"}],"description":"Token generation input"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/":{"get":{"summary":"Returns API information","description":"Returns API information","operationId":"root__get","responses":{"200":{"description":"API information with title, description and version.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiInfo"}}}}}}}},"components":{"schemas":{"ApiInfo":{"title":"ApiInfo","required":["title","description","version"],"type":"object","properties":{"title":{"title":"Title","type":"string"},"description":{"title":"Description","type":"string"},"version":{"title":"Version","type":"string"}},"example":{"title":"OpenCopilot API","description":"OpenCopilot API, for more information visit https://docs.opencopilot.dev/","version":"0.1"}},"ChatDeleteResponse":{"title":"ChatDeleteResponse","required":["response"],"type":"object","properties":{"response":{"title":"Response","type":"string","description":"Response status, either OK or NOK."}},"example":{"response":"OK"}},"ChatHistoryItem":{"title":"ChatHistoryItem","required":["content","timestamp","response_message_id"],"type":"object","properties":{"content":{"title":"Content","type":"string"},"timestamp":{"title":"Timestamp","type":"integer"},"response_message_id":{"title":"Response Message Id","type":"string"}}},"ChatHistoryResponse":{"title":"ChatHistoryResponse","required":["response","conversation_id"],"type":"object","properties":{"response":{"title":"Response","type":"string"},"conversation_id":{"title":"Conversation Id","type":"string","description":"Chat id"},"messages":{"title":"Messages","type":"array","items":{"$ref":"#/components/schemas/ChatHistoryItem"},"description":"Messages"}},"example":{"response":"OK","conversation_id":"e91042aa-d53a-41eb-8884-67aa4947982d","messages":[{"content":"Hello","timestamp":1693562530,"response_message_id":"ed02eedf-7a74-4a31-8fbf-eeb4300faf31"},{"content":"Hello, how are you?","timestamp":1693562539,"response_message_id":"ed02eedf-7a74-4a31-8fbf-eeb4300faf31"}]}},"ChatResponse":{"title":"ChatResponse","required":["response","conversation_id","message"],"type":"object","properties":{"response":{"title":"Response","type":"string","description":"Response status, either OK or NOK."},"conversation_id":{"title":"Conversation Id","type":"string","description":"Conversation id"},"message":{"title":"Message","type":"string","description":"Conversation output"},"sources":{"title":"Sources","type":"array","items":{"type":"string"},"description":"Sources"}},"example":{"response":"OK","conversation_id":"e91042aa-d53a-41eb-8884-67aa4947982d","message":"I will use the 'search' command to find the weather in San Francisco."}},"ConversationInput":{"title":"ConversationInput","required":["message"],"type":"object","properties":{"message":{"title":"Message","type":"string","description":"Message to be answered by the copilot.","example":"How do I make a delicious lemon cheesecake?"},"response_message_id":{"title":"Response Message Id","type":"string"}},"example":{"message":"How do I make a delicious lemon cheesecake?"}},"ConversationsResponse":{"title":"ConversationsResponse","required":["response","conversation_ids"],"type":"object","properties":{"response":{"title":"Response","type":"string","description":"Response status, either OK or NOK."},"conversation_ids":{"title":"Conversation Ids","type":"array","items":{"type":"string"}}},"example":{"response":"OK","conversation_ids":["e91042aa-d53a-41eb-8884-67aa4947982d"]}},"GetMessageDebugResponse":{"title":"GetMessageDebugResponse","required":["response"],"type":"object","properties":{"response":{"title":"Response","type":"string","description":"Response status, either OK or NOK."},"prompt_template":{"title":"Prompt Template","allOf":[{"$ref":"#/components/schemas/ValueWithTokens"}],"description":"Prompt template used."},"data_sources":{"title":"Data Sources","type":"string","description":"List of data sources used in string json format."},"user_question":{"title":"User Question","allOf":[{"$ref":"#/components/schemas/ValueWithTokens"}],"description":"User question."},"context":{"title":"Context","allOf":[{"$ref":"#/components/schemas/ValueWithTokens"}],"description":"List of context strings used the final prompt in json format."},"chat_history":{"title":"Chat History","allOf":[{"$ref":"#/components/schemas/ValueWithTokens"}],"description":"Chat history used in the final prompt in json format."},"full_prompt":{"title":"Full Prompt","allOf":[{"$ref":"#/components/schemas/ValueWithTokens"}],"description":"Final prompt used in the LLM call."},"llm_response":{"title":"Llm Response","allOf":[{"$ref":"#/components/schemas/ValueWithTokens"}],"description":"LLM answer."}},"example":{"response":"OK","prompt_template":"You are a copilot.\n{context} {history} {answer}","data_sources":["{}"],"user_question":"Who are you?","context":["[{\"page_content\": \"This is some text from the data files.\", \"metadata\": {\"source\": \"copilots/data/test.txt\"}}]"],"chat_history":["[{\"user\": \"Who are you?\", {\"copilot\": \"I am a copilot.\"}]"],"full_prompt":"Full formatted prompt text here","llm_response":"I am a copilot."}},"HTTPValidationError":{"title":"HTTPValidationError","type":"object","properties":{"detail":{"title":"Detail","type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}},"TokenRequest":{"title":"TokenRequest","required":["client_id","client_secret","user_id"],"type":"object","properties":{"client_id":{"title":"Client Id","type":"string","description":"Client id"},"client_secret":{"title":"Client Secret","type":"string","description":"Client secret"},"user_id":{"title":"User Id","type":"string","description":"User id"}}},"TokenResponse":{"title":"TokenResponse","required":["response","token"],"type":"object","properties":{"response":{"title":"Response","type":"string","description":"Response status, either OK or NOK."},"token":{"title":"Token","type":"string","description":"JWT token"}},"example":{"response":"OK","token":"e91042aa-d53a-41eb-8884-67aa4947982d"}},"ValidationError":{"title":"ValidationError","required":["loc","msg","type"],"type":"object","properties":{"loc":{"title":"Location","type":"array","items":{"anyOf":[{"type":"string"},{"type":"integer"}]}},"msg":{"title":"Message","type":"string"},"type":{"title":"Error Type","type":"string"}}},"ValueWithTokens":{"title":"ValueWithTokens","required":["value"],"type":"object","properties":{"value":{"title":"Value","type":"string"},"token_count":{"title":"Token Count","type":"integer","description":"If debug mode is enabled will include token counts."}}}},"securitySchemes":{"APIKeyHeader":{"type":"apiKey","in":"header","name":"Authorization"}}},"x-readme":{"samples-languages":["curl","node","javascript","python"]}}